# ===============github主站====================
	upstream github {
		server github.com:443;
		keepalive 32;
	}
	
	
	server {
		listen 443 ssl http2;
		server_name github.jaychou.site;
		# root /www/wwwroot/fg;

		# SSL Settings
		##
		ssl on;
		ssl_stapling on;
		ssl_stapling_verify on;
		# 注意文件位置，是从/etc/nginx/下开始算起的
		#ssl证书的pem文件路径
		ssl_certificate /root/code/docker/dockerfile_work/xray/cert/cert.pem;
		#ssl证书的key文件路径
		ssl_certificate_key /root/code/docker/dockerfile_work/xray/cert/key.pem;
		ssl_trusted_certificate /root/code/docker/dockerfile_work/xray/cert/cert.pem;
		 # Run following command & set permission before configuring
    	# curl https://ssl-config.mozilla.org/ffdhe2048.txt > /var/lib/nginx/dhparam.pem
		ssl_dhparam /var/lib/nginx/dhparam.pem;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
		ssl_prefer_server_ciphers off;
		ssl_session_cache shared:SSL:1m;
		ssl_session_timeout 60m;
		ssl_session_tickets off;

		client_max_body_size 2G;
		error_page 497  https://$host$request_uri;

		add_header Permissions-Policy interest-cohort=();
		
		gzip on;
		gzip_min_length 1k;
		gzip_buffers 4 16k;
		gzip_http_version 1.1;
		gzip_comp_level 2;
		gzip_vary on; 
		gzip_proxied any; # test required
		gzip_types
			text/plain
			text/css
			text/js
			text/xml
			text/javascript
			application/javascript
			application/json
			application/xml
			application/rss+xml
			image/svg+xml;

		# SSL
		location ~ \.well-known {
			allow all;
		}

		# releases download
		location ~ ^/[^/]+/[^/]+/releases/download/ {
			return 301 https://download.jaychou.site$request_uri;
		}

		# archive download
		location ~ ^/[^/]+/[^/]+/archive/ {
			return 301 https://archive.jaychou.site$request_uri;
		}
		
		location ~ ^/[^/]+/[^/]+/suites/[^/]+/artifacts/ {
			return 301 https://download.jaychou.site$request_uri;
		}

		# Fuck Search Engine
		location /robots.txt {
			allow all;
		}
		
		location / {
			proxy_hide_header referrer-policy;
			proxy_hide_header content-security-policy;
			proxy_hide_header Strict-Transport-Security;
			proxy_hide_header x-pjax-url;

			proxy_set_header Host github.com;
			proxy_set_header Accept-Encoding "";
			proxy_set_header Referer https://github.com/;
			proxy_set_header Origin https://github.com;
			#proxy_set_header Connection "";

			add_header x-pjax-url "https://github.jaychou.site$request_uri";

			proxy_http_version 1.1;
			proxy_connect_timeout 10s;
			proxy_read_timeout 10s;
			
			# Not supported when installed from Debian source
			# proxy_socket_keepalive on;
			
			proxy_ssl_server_name on;
			
			sub_filter "\"https://raw.githubusercontent.com" "\"https://raw.jaychou.site";
			sub_filter "\"https://github.com" "\"https://github.jaychou.site";
			sub_filter "\"https://github.githubassets.com" "\"https://gh-assets.jaychou.site";
			sub_filter "https://customer-stories-feed.github.com" "https://customer-stories-feed.jaychou.site";
			sub_filter_once off;
			
			proxy_cookie_domain github.com github.jaychou.site;

			proxy_redirect https://github.com https://github.jaychou.site;
			proxy_redirect https://raw.githubusercontent.com https://raw.jaychou.site;
			proxy_redirect https://github.githubassets.com https://gh-assets.jaychou.site;
			proxy_redirect https://customer-stories-feed.github.com https://customer-stories-feed.jaychou.site;
			proxy_redirect https://codeload.github.com https://codeload.jaychou.site;

			proxy_pass https://github;
		}

		# Block search engine
		# if ($http_user_agent ~* "qihoobot|Baiduspider|Bingbot|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot")
		# {
		#     return 403;
		# }

		# Anti Agent Bot DDoS
		# If behind CDN, use folloing commented code
		# if ($http_x_forwarded_for != $remote_addr) {
		#     return 503;
		# }
		if ($proxy_add_x_forwarded_for != $remote_addr) {
			return 503;
		}

		# access_log  /www/wwwlogs/hub.fastgit.xyz.log;
		# error_log  /www/wwwlogs/hub.fastgit.xyz.error.log;
   }
	
	# ===============github assets主站=================================
	server {
		listen 443 ssl http2;
		server_name gh-assets.jaychou.site;
		# root /www/wwwroot/fg;

		# SSL Settings
		##
		ssl on;
		# 注意文件位置，是从/etc/nginx/下开始算起的
		#ssl证书的pem文件路径
		ssl_certificate /root/code/docker/dockerfile_work/xray/cert/cert.pem;
		#ssl证书的key文件路径
		ssl_certificate_key /root/code/docker/dockerfile_work/xray/cert/key.pem;

		add_header Strict-Transport-Security  "max-age=63072000; includeSubDomains; preload";
		ssl_ciphers TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-256-GCM-SHA384:TLS13-AES-128-GCM-SHA256:EECDH+CHACHA20:EECDH+AESGCM:EECDH+AES;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_stapling on;
		ssl_stapling_verify on;
		ssl_trusted_certificate /root/code/docker/dockerfile_work/xray/cert/cert.pem;
		ssl_prefer_server_ciphers on;
		ssl_session_cache shared:SSL:1m;
		ssl_verify_depth 10;
		ssl_session_timeout 30m;

		error_page 497  https://$host$request_uri;

		# /etc/nginx/snippets/anti-floc.conf
		add_header Permissions-Policy interest-cohort=();

		# SSL
		location ~ \.well-known {
			allow all;
		}
		
		# Fuck Search Engine
		location /robots.txt {
			allow all;
		}
		
		#PROXY-START/
		location ~* \.(php|jsp|cgi|asp|aspx)$
		{
			proxy_pass https://github.githubassets.com;
			proxy_set_header Host github.githubassets.com;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header REMOTE-HOST $remote_addr;
		}
		
		location /
		{
			proxy_pass https://github.githubassets.com;
			proxy_set_header Host github.githubassets.com;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header REMOTE-HOST $remote_addr;
			add_header X-Cache $upstream_cache_status;
			proxy_ignore_headers Set-Cookie Cache-Control expires;
			# proxy_cache cache_one;
			proxy_cache_key $host$uri$is_args$args;
			proxy_cache_valid 200 304 301 302 480m;
			expires 12h;
		}

		# Block search engine
		# if ($http_user_agent ~* "qihoobot|Baiduspider|Bingbot|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot")
		# {
		#     return 403;
		# }

		# Anti Agent Bot DDoS
		# If behind CDN, use folloing commented code
		# if ($http_x_forwarded_for != $remote_addr) {
		#     return 503;
		# }
		if ($proxy_add_x_forwarded_for != $remote_addr) {
			return 503;
		}

		# access_log  /www/wwwlogs/assets.fastgit.org.log;
		# error_log  /www/wwwlogs/assets.fastgit.org.error.log;
	}


	# ===================github raw============================
	upstream rawgithub {
		server raw.githubusercontent.com:443;
		keepalive 32;
	}

	server {
		listen 443 ssl http2;
		server_name raw.jaychou.site;
		# root /www/wwwroot/fg;

		# SSL Settings
			##
		ssl on;
		# 注意文件位置，是从/etc/nginx/下开始算起的
		#ssl证书的pem文件路径
		ssl_certificate /root/code/docker/dockerfile_work/xray/cert/cert.pem;
		#ssl证书的key文件路径
		ssl_certificate_key /root/code/docker/dockerfile_work/xray/cert/key.pem;

		add_header Strict-Transport-Security  "max-age=63072000; includeSubDomains; preload";
		ssl_ciphers TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-256-GCM-SHA384:TLS13-AES-128-GCM-SHA256:EECDH+CHACHA20:EECDH+AESGCM:EECDH+AES;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_stapling on;
		ssl_stapling_verify on;
		ssl_trusted_certificate /root/code/docker/dockerfile_work/xray/cert/cert.pem;
		ssl_prefer_server_ciphers on;
		ssl_session_cache shared:SSL:1m;
		ssl_verify_depth 10;
		ssl_session_timeout 30m;
		error_page 497  https://$host$request_uri;

		# /etc/nginx/snippets/anti-floc.conf
		add_header Permissions-Policy interest-cohort=();

		# SSL
		location ~ \.well-known {
			allow all;
		}

		# Fuck Search Engine
		location /robots.txt {
			allow all;
		}
		
		location / {
			valid_referers none blocked  *.jaychou.site *.fastgit.xyz *.fastgit.org raw.githubusercontent.com github.com;
			if ($invalid_referer){
				return 403;
			}
			proxy_hide_header content-security-policy;
			proxy_hide_header Strict-Transport-Security;
			proxy_hide_header set-cookie;
			proxy_hide_header x-pjax-url;

			proxy_set_header Host raw.githubusercontent.com;
			# proxy_set_header Connection "";

			add_header X-FastGit-Node "dogyun-de-1";

			proxy_http_version 1.1;
			proxy_connect_timeout 5s;
			proxy_read_timeout 5s;

			proxy_pass https://rawgithub;
		}
		
		#location ~ .*\.(jpg|jpeg|gif|png|js|css)$
		#{
		#    valid_referers none blocked *.fastgit.org raw.githubusercontent.com github.com;
		#    if ($invalid_referer){
		#       return 403;
		#    }
		#    proxy_hide_header content-security-policy;
		#    proxy_hide_header Strict-Transport-Security;
		#    proxy_hide_header set-cookie;
		#    proxy_hide_header x-pjax-url;
		#
		#    proxy_set_header Host raw.githubusercontent.com;
		#    proxy_set_header Accept-Encoding "";
		#    #proxy_set_header Connection "";
		#
		#    add_header x-fastgit-node "dogyun-de-1";
		#
		#    proxy_http_version 1.1;
		#    proxy_connect_timeout 5s;
		#    proxy_read_timeout 5s;
		#
		#    proxy_pass https://rawgithub;
		#}

		# Block search engine
		# if ($http_user_agent ~* "qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot")
		# {
		#     return 403;
		# }

		# access_log  /www/wwwlogs/raw.fastgit.org.log;
		# error_log  /www/wwwlogs/raw.fastgit.org.error.log;
	}
	
	# ================github download==================================
	upstream GithubDownload {
		server github.com:443;
		keepalive 32;
	}

	server {
		listen 443 ssl http2;
		server_name download.jaychou.site;
		# root /www/wwwroot/fg;
		# index index.html;

		ssl on;
		# 注意文件位置，是从/etc/nginx/下开始算起的
		#ssl证书的pem文件路径
		ssl_certificate /root/code/docker/dockerfile_work/xray/cert/cert.pem;
		#ssl证书的key文件路径
		ssl_certificate_key /root/code/docker/dockerfile_work/xray/cert/key.pem;

		add_header Strict-Transport-Security  "max-age=63072000; includeSubDomains; preload";
		ssl_ciphers TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-256-GCM-SHA384:TLS13-AES-128-GCM-SHA256:EECDH+CHACHA20:EECDH+AESGCM:EECDH+AES;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_stapling on;
		ssl_stapling_verify on;
		ssl_trusted_certificate /root/code/docker/dockerfile_work/xray/cert/cert.pem;
		ssl_prefer_server_ciphers on;
		ssl_session_cache shared:SSL:1m;
		ssl_verify_depth 10;
		ssl_session_timeout 30m;

		error_page 497  https://$host$request_uri;
		
		# /etc/nginx/snippets/anti-floc.conf
		add_header Permissions-Policy interest-cohort=();

		# SSL
		location ~ \.well-known{
			allow all;
		}
		
		location / {

		}
		
		location ~ ^/[^/]+/[^/]+/releases(/latest)?/download/ {
			proxy_cache_valid 206 120m;
			proxy_cache_valid 200 120m;
			recursive_error_pages on;
			proxy_pass https://GithubDownload;
			proxy_intercept_errors on;
			error_page 301 302 307 = @handle_redirect;
		}
		
		location ~ ^/[^/]+/[^/]+/suites/[^/]+/artifacts/ {
			proxy_cache_valid 206 120m;
			proxy_cache_valid 200 120m;
			recursive_error_pages on;
			proxy_pass https://GithubDownload;
			proxy_intercept_errors on;
			error_page 301 302 307 = @handle_redirect;
		}
		
		location ~ ^/[^/]+/[^/]+/archive/ {
			return 301 https://archive.jaychou.site$request_uri;
		}

		location @handle_redirect {
			resolver 8.8.8.8;
			recursive_error_pages on;
			set $saved_redirect_location '$upstream_http_location';
			proxy_pass $saved_redirect_location;
			proxy_intercept_errors on;
			error_page 301 302 307 = @handle_redirect;
		}
		
		# Block search engine
		if ($http_user_agent ~* "qihoobot|Baiduspider|Bingbot|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot") {
			return 403;
		}

		# access_log  /www/wwwlogs/download.fastgit.org.log;
		# error_log  /www/wwwlogs/download.fastgit.org.error.log;
	}
	
	# =====================GithubArchive============================================
	
	upstream GithubArchive {
		server github.com:443;
		keepalive 32;
	}

	server {
		listen 443 ssl http2;
		server_name archive.jaychou.site;
		# root /www/wwwroot/fg;
		# index index.html;

		ssl on;
		# 注意文件位置，是从/etc/nginx/下开始算起的
		#ssl证书的pem文件路径
		ssl_certificate /root/code/docker/dockerfile_work/xray/cert/cert.pem;
		#ssl证书的key文件路径
		ssl_certificate_key /root/code/docker/dockerfile_work/xray/cert/key.pem;

		add_header Strict-Transport-Security  "max-age=63072000; includeSubDomains; preload";
		ssl_ciphers TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-256-GCM-SHA384:TLS13-AES-128-GCM-SHA256:EECDH+CHACHA20:EECDH+AESGCM:EECDH+AES;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_stapling on;
		ssl_stapling_verify on;
		ssl_trusted_certificate /root/code/docker/dockerfile_work/xray/cert/cert.pem;
		ssl_prefer_server_ciphers on;
		ssl_session_cache shared:SSL:1m;
		ssl_verify_depth 10;
		ssl_session_timeout 30m;

		error_page 497  https://$host$request_uri;
		
		# /etc/nginx/snippets/anti-floc.conf
		add_header Permissions-Policy interest-cohort=();

		# SSL
		location ~ \.well-known{
			allow all;
		}
		
		location / {

		}
		
		location ~ ^/[^/]+/[^/]+/releases(/latest)?/download/ {
			return 301 https://download.jaychou.site$request_uri;
		}
		
		location ~ ^/[^/]+/[^/]+/suites/[^/]+/artifacts/ {
			return 301 https://download.jaychou.site$request_uri;
		}
		
		location ~ ^/[^/]+/[^/]+/archive/ {
			recursive_error_pages on;
			proxy_pass https://GithubArchive;
			proxy_intercept_errors on;
			error_page 301 302 307 = @handle_redirect;
		}

		location @handle_redirect {
			resolver 8.8.8.8;
			recursive_error_pages on;
			set $saved_redirect_location '$upstream_http_location';
			proxy_pass $saved_redirect_location;
			proxy_intercept_errors on;
			error_page 301 302 307 = @handle_redirect;
		}
		
		# Block search engine
		if ($http_user_agent ~* "qihoobot|Baiduspider|Bingbot|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot") {
			return 403;
		}

		# access_log  /www/wwwlogs/archive.fastgit.org.log;
		# error_log  /www/wwwlogs/archive.fastgit.org.error.log;
	}
	
	# =====================github codeload配置==================================
	upstream GithubCodeload {
		server codeload.github.com:443;
		keepalive 32;
	}

	server {
		listen 443 ssl http2;
		server_name codeload.jaychou.site;
		# root /www/wwwroot/fg;
		# index index.html;

		ssl on;
		# 注意文件位置，是从/etc/nginx/下开始算起的
		#ssl证书的pem文件路径
		ssl_certificate /root/code/docker/dockerfile_work/xray/cert/cert.pem;
		#ssl证书的key文件路径
		ssl_certificate_key /root/code/docker/dockerfile_work/xray/cert/key.pem;

		add_header Strict-Transport-Security  "max-age=63072000; includeSubDomains; preload";
		ssl_ciphers TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-256-GCM-SHA384:TLS13-AES-128-GCM-SHA256:EECDH+CHACHA20:EECDH+AESGCM:EECDH+AES;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_stapling on;
		ssl_stapling_verify on;
		ssl_trusted_certificate /root/code/docker/dockerfile_work/xray/cert/cert.pem;
		ssl_prefer_server_ciphers on;
		ssl_session_cache shared:SSL:1m;
		ssl_verify_depth 10;
		ssl_session_timeout 30m;

		error_page 497  https://$host$request_uri;
		
		# /etc/nginx/snippets/anti-floc.conf
		add_header Permissions-Policy interest-cohort=();

		# SSL
		location ~ \.well-known {
			allow all;
		}
		
		location /robots.txt {
		
		}
		
		location / {
			recursive_error_pages on;
			proxy_pass https://GithubCodeload;
			proxy_intercept_errors on;
			error_page 301 302 307 = @handle_redirect;
		}
		
		location ~ ^/[^/]+/[^/]+/releases(/latest)?/download/ {
			return 301 https://download.jaychou.site$request_uri;
		}
		
		location ~ ^/[^/]+/[^/]+/archive/ {
			return 301 https://archive.jaychou.site$request_uri;
		}

		location @handle_redirect {
			resolver 8.8.8.8;
			recursive_error_pages on;
			set $saved_redirect_location '$upstream_http_location';
			proxy_pass $saved_redirect_location;
			proxy_intercept_errors on;
			error_page 301 302 307 = @handle_redirect;
		}
		
		# Block search engine
		if ($http_user_agent ~* "qihoobot|Baiduspider|Bingbot|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot") {
			return 403;
		}

		# access_log  /www/wwwlogs/codeload.fastgit.org.log;
		# error_log  /www/wwwlogs/codeload.fastgit.org.error.log;
	}
